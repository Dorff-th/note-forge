import axios from 'axios';
import { store } from '@store/index'; // Redux store
import { logout, refreshToken } from '@store/slices/authSlice';

const API_BASE = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8080/api';

export const axiosInstance = axios.create({
  baseURL: API_BASE,
  headers: {
    'Content-Type': 'application/json',
    timeout: 5000,
  },
});

// 요청 인터셉터
axiosInstance.interceptors.request.use(
  (config) => {
    const state = store.getState();
    const token = state.auth.accessToken;

    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error),
);

// 응답 인터셉터
axiosInstance.interceptors.response.use(
  (response) => response,
  async (error) => {
    const originalRequest = error.config;

    // 토큰 만료 → 재발급 로직
    if (error.response?.status === 401 && !originalRequest._retry) {
      originalRequest._retry = true;
      try {
        await store.dispatch(refreshToken());
        return axiosInstance(originalRequest); // 재시도
      } catch {
        store.dispatch(logout());
      }
    }
    return Promise.reject(error);
  },
);

export default axiosInstance;
